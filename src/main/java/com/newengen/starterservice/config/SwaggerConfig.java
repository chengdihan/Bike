package com.newengen.starterservice.config;

import io.swagger.v3.oas.models.Components;
import io.swagger.v3.oas.models.OpenAPI;
import io.swagger.v3.oas.models.info.Info;
import io.swagger.v3.oas.models.security.SecurityRequirement;
import io.swagger.v3.oas.models.security.SecurityScheme;
import java.util.List;
import org.springframework.boot.info.BuildProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class SwaggerConfig {

    /**
     * Configure service metadata common to all endpoints in this service.
     * @param buildProperties - properties generated by the build such as version number.
     * @return a configured OpenAPI spec.
     */
    @Bean
    public OpenAPI openAPI(
        final BuildProperties buildProperties
    ) {
        return new OpenAPI()
            // TODO: Customize this with the relevant information about your service.
            .info(
                new Info()
                    .title("Starter Service")
                    .description("Provides a starting point for Jove microservices.")
                    .version(buildProperties.getVersion())
            )
            .components(
                new Components()
                    .addSecuritySchemes(
                        "bearer-jwt",
                        new SecurityScheme()
                            .type(SecurityScheme.Type.HTTP)
                            .scheme("bearer")
                            .bearerFormat("JWT")
                            .in(SecurityScheme.In.HEADER)
                            .name("Authorization")
                    )
            )
            .addSecurityItem(
                new SecurityRequirement()
                    .addList("bearer-jwt", List.of("read", "write"))
            );
    }
}
